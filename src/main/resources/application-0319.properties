server:
port: 90
servlet:
context-path: /
#tomcat:
#accept-count: 1000
#threads:
#max: 1000
#max-connections: 20000
jetty:
threads:
max: 1000
max-queue-capacity: 20000
max-http-form-post-size: -1
max-threads: 1000
spring:
#  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    url: jdbc:mysql://127.0.0.1:3306/db_spm1?serverTimezone=GMT%2B8&useSSL=false
#    username: root
#    password: 1234
#    driver-class-name: com.mysql.jdbc.Driver

#spring:
#  shardingsphere:
#    props:
#    sql:
#      show: true
#    datasource:
#      names: ds0
#        ds0:
#          type: com.zaxxer.hikari.HikariDataSource
#          driverClassName: com.mysql.cj.jdbc.Driver
#          jdbcUrl: jdbc:mysql://localhost:3306/ds0?serverTimezone=GMT%2B8
#          username: root
#          password: 123123
#          minimumIdle: 20
#          maximumPoolSize: 200
#          autoCommit: true
#          idleTimeout: 30000
#          poolName: DS0DatabookHikariCP
#          maxLifetime: 1800000
#          connectionTimeout: 30000
#          connectionTestQuery: SELECT 1
#    sharding:
#      broadcastTables: t_user
#      tables:
#        t_order: #逻辑表名
#        actualDataNodes: ds$->{0..0}.t_order_$->{2020..2020}0$->{1..9}, ds$->{0..0}.t_order_$->{2020..2020}$->{10..12} #实际表
#        tableStrategy: #分表策略
#          standard: #标准分片策略
#            shardingColumn: create_time #分片字段
#          preciseAlgorithmClassName: com.pack.sharding.algorithm.DateTableShardingAlgorithm
#          rangeAlgorithmClassName: com.pack.sharding.algorithm.DataTabeRangeShardingAlgorithm

shardingsphere :
datasource :
names : ds0,ds1,ds2,ds3,ds4
#ds0配置
ds0 :
type : com.zaxxer.hikari.HikariDataSource
driver-class-name : com.mysql.jdbc.Driver
jdbc-url : jdbc:mysql://127.0.0.1:3306/db_spm1?serverTimezone=GMT%2B8&useSSL=false
username : root
password : 1234
#ds1配置
ds1:
type : com.zaxxer.hikari.HikariDataSource
driver-class-name : com.mysql.jdbc.Driver
jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm2?serverTimezone=GMT%2B8&useSSL=false
username: root
password: 1234
#ds1配置
ds2:
type: com.zaxxer.hikari.HikariDataSource
driver-class-name: com.mysql.jdbc.Driver
jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm3?serverTimezone=GMT%2B8&useSSL=false
username: root
password: 1234
#ds1配置
ds3:
type: com.zaxxer.hikari.HikariDataSource
driver-class-name: com.mysql.jdbc.Driver
jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm4?serverTimezone=GMT%2B8&useSSL=false
username: root
password: 1234
#ds1配置
ds4:
type: com.zaxxer.hikari.HikariDataSource
driver-class-name: com.mysql.jdbc.Driver
jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm5?serverTimezone=GMT%2B8&useSSL=false
username: root
password: 1234
#ds1配置
#      ds5:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm6?serverTimezone=GMT%2B8&useSSL=false
#        username: root
#        password: 1234
#      #ds1配置
#      ds6:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm7?serverTimezone=GMT%2B8&useSSL=false
#        username: root
#        password: 1234
#      #ds1配置
#      ds7:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm8?serverTimezone=GMT%2B8&useSSL=false
#        username: root
#        password: 1234
#      #ds1配置
#      ds8:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm9?serverTimezone=GMT%2B8&useSSL=false
#        username: root
#        password: 1234
#      #ds1配置
#      ds9:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        jdbc-url: jdbc:mysql://127.0.0.1:3306/db_spm10?serverTimezone=GMT%2B8&useSSL=false
#        username: root
#        password: 1234
# 分库策略 根据id取模确定数据进哪个数据库
sharding :
default-database-strategy:
inline:
algorithm-expression: ds$->{id % 5} #{${random.int[0,9]}} #{id % 2}
sharding-column: id
# 具体分表策略
# 节点 ds0.t_order_0,ds0.t_order_1,ds1.t_order_0,ds1.t_order_1
tables :
s_pcb :
actual-data-nodes: ds$->{0..4}.s_pcb_$->{0..2}  #有多少库填写多少  有多少表填写多少
table-strategy :
inline :
sharding-column : id  # 分表字段id
algorithm-expression : s_pcb_$->{id % 3} # 分表策略 根据id取模,确定数据最终落在那个表中
# 使用SNOWFLAKE算法生成主键
key-generator.column : id
key-generator.type : SNOWFLAKE
s_pad:
actual-data-nodes: ds$->{0..4}.s_pad_$->{0..20}  #有多少库填写多少  有多少表填写多少
table-strategy:
inline:
sharding-column: create_time  # 分表字段create_time
algorithm-expression: s_pad_$->{create_time} # 分表策略 根据id取模,确定数据最终落在那个表中
# 使用SNOWFLAKE算法生成主键
key-generator.column: id
key-generator.type: SNOWFLAKE
props :
sql :
show : false

jackson :
time-zone : GMT+8
date-format : yyyy-MM-dd HH:mm:ss
resources :
static-locations : classpath:/META-INF/resources/, classpath:/META-INF/resources/webjars/,classpath:/META-INF/static/,classpath:/static/
mvc :
view :
prefix : /WEB-INF/pages/
suffix : .jsp
freemarker :
suffix : .ff
mybatis-plus :
mapper-locations : classpath:mappers/*.xml
type-aliases-package : com.sinictek.restfulapi.model
global-config :
db-column-underline : false #驼峰下划线转换
# Sequence序列接口实现类配置
#逻辑删除配置（下面3个配置）
logic-delete-value : Y
logic-not-delete-value : N
configuration :
#配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
map-underscore-to-camel-case : false
cache-enabled : false
#配置JdbcTypeForNull, oracle数据库必须配置
jdbc-type-for-null : 'null'
#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
#若采用雪花算法生成id，需要在生成的实体类中将id的type = IdType.AUTO去掉
id-type : 0
#字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
field-strategy : 2

